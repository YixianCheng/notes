When I have to pop a list to grab the last few elements, but don't want them to reverse --> res = [li.pop()] + res

li.append(elem) is faster than st += elem

set() is faster than list when I don't need the order, for example when I just want to check if one element is in

When there are multiple conditions in if-else, make sure put the lowest-pass-rate conditions first, the highest-time-consumption conditions last, if the order doesn't matter.

i>>1 --> i*2
i<<1 --> i//2

How to do recursion:
1. self.res = 0
2. def recur(things I need):
    3.Basic situations: do some operations on self.res
      return
      
    4.left = recur(updated things I need)
      right = recur(updated things I need)
    5.return left+right or calculations like this
      
6. recur(start situations)
7. return self.res
